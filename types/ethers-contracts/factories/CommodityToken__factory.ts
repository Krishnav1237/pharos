/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CommodityToken,
  CommodityTokenInterface,
} from "../CommodityToken";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_name",
        type: "string",
        internalType: "string",
      },
      {
        name: "_symbol",
        type: "string",
        internalType: "string",
      },
      {
        name: "_commodityName",
        type: "string",
        internalType: "string",
      },
      {
        name: "_commoditySymbol",
        type: "string",
        internalType: "string",
      },
      {
        name: "_commodityDescription",
        type: "string",
        internalType: "string",
      },
      {
        name: "_commodityCategory",
        type: "string",
        internalType: "string",
      },
      {
        name: "_standardUnit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_maxSupply",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "assetRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "burn",
    inputs: [
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "burnFrom",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "commodityCategory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "commodityDescription",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "commodityName",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "commoditySymbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isTradable",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setAssetRegistry",
    inputs: [
      {
        name: "_assetRegistry",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTradable",
    inputs: [
      {
        name: "_isTradable",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "standardUnit",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateCategory",
    inputs: [
      {
        name: "_commodityCategory",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateMetadata",
    inputs: [
      {
        name: "_commodityName",
        type: "string",
        internalType: "string",
      },
      {
        name: "_commoditySymbol",
        type: "string",
        internalType: "string",
      },
      {
        name: "_commodityDescription",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateStandardUnit",
    inputs: [
      {
        name: "_standardUnit",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CommodityCategoryUpdated",
    inputs: [
      {
        name: "commodityCategory",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CommodityMetadataUpdated",
    inputs: [
      {
        name: "commodityName",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "commoditySymbol",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "commodityDescription",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RegistryUpdated",
    inputs: [
      {
        name: "newRegistry",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StandardUnitUpdated",
    inputs: [
      {
        name: "standardUnit",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TradingStatusChanged",
    inputs: [
      {
        name: "isTradable",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ERC20InsufficientAllowance",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "allowance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InsufficientBalance",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidApprover",
    inputs: [
      {
        name: "approver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidReceiver",
    inputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSender",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSpender",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60806040525f600c60146101000a81548160ff021916908315150217905550348015610029575f5ffd5b50604051612a48380380612a48833981810160405281019061004b91906103e9565b808989816003908161005d919061075c565b50806004908161006d919061075c565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100e0575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100d7919061083a565b60405180910390fd5b6100ef8161014c60201b60201c565b5086600690816100ff919061075c565b50856007908161010f919061075c565b50846008908161011f919061075c565b50836009908161012f919061075c565b5082600a8190555081600b81905550505050505050505050610853565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61026e82610228565b810181811067ffffffffffffffff8211171561028d5761028c610238565b5b80604052505050565b5f61029f61020f565b90506102ab8282610265565b919050565b5f67ffffffffffffffff8211156102ca576102c9610238565b5b6102d382610228565b9050602081019050919050565b8281835e5f83830152505050565b5f6103006102fb846102b0565b610296565b90508281526020810184848401111561031c5761031b610224565b5b6103278482856102e0565b509392505050565b5f82601f83011261034357610342610220565b5b81516103538482602086016102ee565b91505092915050565b5f819050919050565b61036e8161035c565b8114610378575f5ffd5b50565b5f8151905061038981610365565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103b88261038f565b9050919050565b6103c8816103ae565b81146103d2575f5ffd5b50565b5f815190506103e3816103bf565b92915050565b5f5f5f5f5f5f5f5f5f6101208a8c03121561040757610406610218565b5b5f8a015167ffffffffffffffff8111156104245761042361021c565b5b6104308c828d0161032f565b99505060208a015167ffffffffffffffff8111156104515761045061021c565b5b61045d8c828d0161032f565b98505060408a015167ffffffffffffffff81111561047e5761047d61021c565b5b61048a8c828d0161032f565b97505060608a015167ffffffffffffffff8111156104ab576104aa61021c565b5b6104b78c828d0161032f565b96505060808a015167ffffffffffffffff8111156104d8576104d761021c565b5b6104e48c828d0161032f565b95505060a08a015167ffffffffffffffff8111156105055761050461021c565b5b6105118c828d0161032f565b94505060c06105228c828d0161037b565b93505060e06105338c828d0161037b565b9250506101006105458c828d016103d5565b9150509295985092959850929598565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105a357607f821691505b6020821081036105b6576105b561055f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106187fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105dd565b61062286836105dd565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61065d6106586106538461035c565b61063a565b61035c565b9050919050565b5f819050919050565b61067683610643565b61068a61068282610664565b8484546105e9565b825550505050565b5f5f905090565b6106a1610692565b6106ac81848461066d565b505050565b5b818110156106cf576106c45f82610699565b6001810190506106b2565b5050565b601f821115610714576106e5816105bc565b6106ee846105ce565b810160208510156106fd578190505b610711610709856105ce565b8301826106b1565b50505b505050565b5f82821c905092915050565b5f6107345f1984600802610719565b1980831691505092915050565b5f61074c8383610725565b9150826002028217905092915050565b61076582610555565b67ffffffffffffffff81111561077e5761077d610238565b5b610788825461058c565b6107938282856106d3565b5f60209050601f8311600181146107c4575f84156107b2578287015190505b6107bc8582610741565b865550610823565b601f1984166107d2866105bc565b5f5b828110156107f9578489015182556001820191506020850194506020810190506107d4565b868310156108165784890151610812601f891682610725565b8355505b6001600288020188555050505b505050505050565b610834816103ae565b82525050565b5f60208201905061084d5f83018461082b565b92915050565b6121e8806108605f395ff3fe608060405234801561000f575f5ffd5b50600436106101c2575f3560e01c80637cd50577116100f7578063d36b7f7e11610095578063dd62ed3e1161006f578063dd62ed3e146104be578063e84d033c146104ee578063f2fde38b1461050a578063fc116acd14610526576101c2565b8063d36b7f7e14610466578063d5abeb0114610484578063db2a4570146104a2576101c2565b806395d89b41116100d157806395d89b41146103dc578063979d7e86146103fa578063a9059cbb14610418578063b7fdddf914610448576101c2565b80637cd50577146103845780638da5cb5b146103a05780639408055f146103be576101c2565b806342966c681161016457806362aeeabd1161013e57806362aeeabd1461031057806370a082311461032e578063715018a61461035e57806379cc679014610368576101c2565b806342966c68146102ba5780635017d88d146102d65780635074449d146102f2576101c2565b806318160ddd116101a057806318160ddd1461023257806323b872dd14610250578063313ce5671461028057806340c10f191461029e576101c2565b806306fdde03146101c6578063078414c0146101e4578063095ea7b314610202575b5f5ffd5b6101ce610542565b6040516101db919061175a565b60405180910390f35b6101ec6105d2565b6040516101f9919061175a565b60405180910390f35b61021c60048036038101906102179190611818565b61065e565b6040516102299190611870565b60405180910390f35b61023a610680565b6040516102479190611898565b60405180910390f35b61026a600480360381019061026591906118b1565b610689565b6040516102779190611870565b60405180910390f35b61028861072a565b604051610295919061191c565b60405180910390f35b6102b860048036038101906102b39190611818565b610732565b005b6102d460048036038101906102cf9190611935565b61079f565b005b6102f060048036038101906102eb9190611935565b6107b3565b005b6102fa6107fc565b6040516103079190611870565b60405180910390f35b61031861080f565b6040516103259190611898565b60405180910390f35b61034860048036038101906103439190611960565b610815565b6040516103559190611898565b60405180910390f35b61036661085a565b005b610382600480360381019061037d9190611818565b61086d565b005b61039e600480360381019061039991906119b5565b61088d565b005b6103a86108e9565b6040516103b591906119ef565b60405180910390f35b6103c6610911565b6040516103d3919061175a565b60405180910390f35b6103e461099d565b6040516103f1919061175a565b60405180910390f35b610402610a2d565b60405161040f91906119ef565b60405180910390f35b610432600480360381019061042d9190611818565b610a52565b60405161043f9190611870565b60405180910390f35b610450610af1565b60405161045d919061175a565b60405180910390f35b61046e610b7d565b60405161047b919061175a565b60405180910390f35b61048c610c09565b6040516104999190611898565b60405180910390f35b6104bc60048036038101906104b79190611b34565b610c0f565b005b6104d860048036038101906104d39190611bd8565b610c87565b6040516104e59190611898565b60405180910390f35b61050860048036038101906105039190611960565b610d09565b005b610524600480360381019061051f9190611960565b610df9565b005b610540600480360381019061053b9190611c16565b610e7d565b005b60606003805461055190611c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461057d90611c8a565b80156105c85780601f1061059f576101008083540402835291602001916105c8565b820191905f5260205f20905b8154815290600101906020018083116105ab57829003601f168201915b5050505050905090565b600980546105df90611c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461060b90611c8a565b80156106565780601f1061062d57610100808354040283529160200191610656565b820191905f5260205f20905b81548152906001019060200180831161063957829003601f168201915b505050505081565b5f5f610668610ecf565b9050610675818585610ed6565b600191505092915050565b5f600254905090565b5f600c60149054906101000a900460ff16806106d757506106a86108e9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d90611d2a565b60405180910390fd5b610721848484610ee8565b90509392505050565b5f6012905090565b61073a610f16565b600b5481610746610680565b6107509190611d75565b1115610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890611e18565b60405180910390fd5b61079b8282610f9d565b5050565b6107b06107aa610ecf565b8261101c565b50565b6107bb610f16565b80600a819055507fbd513c82bc3f5557498f5b0b1e6d06d9b608ee577a13d4a0cbd69faa566bdea0816040516107f19190611898565b60405180910390a150565b600c60149054906101000a900460ff1681565b600a5481565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610862610f16565b61086b5f61109b565b565b61087f82610879610ecf565b8361115e565b610889828261101c565b5050565b610895610f16565b80600c60146101000a81548160ff0219169083151502179055507f63e9bb35ae90a43113bc6f999f1c6395e88ee5f59560b46bd45815fe8560efae816040516108de9190611870565b60405180910390a150565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6007805461091e90611c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461094a90611c8a565b80156109955780601f1061096c57610100808354040283529160200191610995565b820191905f5260205f20905b81548152906001019060200180831161097857829003601f168201915b505050505081565b6060600480546109ac90611c8a565b80601f01602080910402602001604051908101604052809291908181526020018280546109d890611c8a565b8015610a235780601f106109fa57610100808354040283529160200191610a23565b820191905f5260205f20905b815481529060010190602001808311610a0657829003601f168201915b5050505050905090565b600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600c60149054906101000a900460ff1680610aa05750610a716108e9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610adf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad690611d2a565b60405180910390fd5b610ae983836111f0565b905092915050565b60088054610afe90611c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2a90611c8a565b8015610b755780601f10610b4c57610100808354040283529160200191610b75565b820191905f5260205f20905b815481529060010190602001808311610b5857829003601f168201915b505050505081565b60068054610b8a90611c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb690611c8a565b8015610c015780601f10610bd857610100808354040283529160200191610c01565b820191905f5260205f20905b815481529060010190602001808311610be457829003601f168201915b505050505081565b600b5481565b610c17610f16565b8260069081610c269190611fd6565b508160079081610c369190611fd6565b508060089081610c469190611fd6565b507ffea0bb4aaacf16716aa8242255405ccd478375833629b02eb783a2ce0cde490a838383604051610c7a939291906120a5565b60405180910390a1505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610d11610f16565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d769061215f565b60405180910390fd5b80600c5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd6ceddf6d2a22f21c7c81675c518004eff43bc5c8a6fc32a0b748e69d58671cd81604051610dee91906119ef565b60405180910390a150565b610e01610f16565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e71575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e6891906119ef565b60405180910390fd5b610e7a8161109b565b50565b610e85610f16565b8060099081610e949190611fd6565b507f8e967079f25fc41ad5ace6e51300b2158ff8303b00c86c4bbd6acd8d5ad5481181604051610ec4919061175a565b60405180910390a150565b5f33905090565b610ee38383836001611212565b505050565b5f5f610ef2610ecf565b9050610eff85828561115e565b610f0a8585856113e1565b60019150509392505050565b610f1e610ecf565b73ffffffffffffffffffffffffffffffffffffffff16610f3c6108e9565b73ffffffffffffffffffffffffffffffffffffffff1614610f9b57610f5f610ecf565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f9291906119ef565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361100d575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161100491906119ef565b60405180910390fd5b6110185f83836114d1565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361108c575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161108391906119ef565b60405180910390fd5b611097825f836114d1565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6111698484610c87565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111ea57818110156111db578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016111d29392919061217d565b60405180910390fd5b6111e984848484035f611212565b5b50505050565b5f5f6111fa610ecf565b90506112078185856113e1565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611282575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161127991906119ef565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112f2575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112e991906119ef565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113db578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113d29190611898565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611451575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161144891906119ef565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114c1575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114b891906119ef565b60405180910390fd5b6114cc8383836114d1565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611521578060025f8282546115159190611d75565b925050819055506115ef565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156115aa578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016115a19392919061217d565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611636578060025f8282540392505081905550611680565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116dd9190611898565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61172c826116ea565b61173681856116f4565b9350611746818560208601611704565b61174f81611712565b840191505092915050565b5f6020820190508181035f8301526117728184611722565b905092915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117b48261178b565b9050919050565b6117c4816117aa565b81146117ce575f5ffd5b50565b5f813590506117df816117bb565b92915050565b5f819050919050565b6117f7816117e5565b8114611801575f5ffd5b50565b5f81359050611812816117ee565b92915050565b5f5f6040838503121561182e5761182d611783565b5b5f61183b858286016117d1565b925050602061184c85828601611804565b9150509250929050565b5f8115159050919050565b61186a81611856565b82525050565b5f6020820190506118835f830184611861565b92915050565b611892816117e5565b82525050565b5f6020820190506118ab5f830184611889565b92915050565b5f5f5f606084860312156118c8576118c7611783565b5b5f6118d5868287016117d1565b93505060206118e6868287016117d1565b92505060406118f786828701611804565b9150509250925092565b5f60ff82169050919050565b61191681611901565b82525050565b5f60208201905061192f5f83018461190d565b92915050565b5f6020828403121561194a57611949611783565b5b5f61195784828501611804565b91505092915050565b5f6020828403121561197557611974611783565b5b5f611982848285016117d1565b91505092915050565b61199481611856565b811461199e575f5ffd5b50565b5f813590506119af8161198b565b92915050565b5f602082840312156119ca576119c9611783565b5b5f6119d7848285016119a1565b91505092915050565b6119e9816117aa565b82525050565b5f602082019050611a025f8301846119e0565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611a4682611712565b810181811067ffffffffffffffff82111715611a6557611a64611a10565b5b80604052505050565b5f611a7761177a565b9050611a838282611a3d565b919050565b5f67ffffffffffffffff821115611aa257611aa1611a10565b5b611aab82611712565b9050602081019050919050565b828183375f83830152505050565b5f611ad8611ad384611a88565b611a6e565b905082815260208101848484011115611af457611af3611a0c565b5b611aff848285611ab8565b509392505050565b5f82601f830112611b1b57611b1a611a08565b5b8135611b2b848260208601611ac6565b91505092915050565b5f5f5f60608486031215611b4b57611b4a611783565b5b5f84013567ffffffffffffffff811115611b6857611b67611787565b5b611b7486828701611b07565b935050602084013567ffffffffffffffff811115611b9557611b94611787565b5b611ba186828701611b07565b925050604084013567ffffffffffffffff811115611bc257611bc1611787565b5b611bce86828701611b07565b9150509250925092565b5f5f60408385031215611bee57611bed611783565b5b5f611bfb858286016117d1565b9250506020611c0c858286016117d1565b9150509250929050565b5f60208284031215611c2b57611c2a611783565b5b5f82013567ffffffffffffffff811115611c4857611c47611787565b5b611c5484828501611b07565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ca157607f821691505b602082108103611cb457611cb3611c5d565b5b50919050565b7f436f6d6d6f64697479546f6b656e3a2054726164696e67206973206e6f7420655f8201527f6e61626c65640000000000000000000000000000000000000000000000000000602082015250565b5f611d146026836116f4565b9150611d1f82611cba565b604082019050919050565b5f6020820190508181035f830152611d4181611d08565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d7f826117e5565b9150611d8a836117e5565b9250828201905080821115611da257611da1611d48565b5b92915050565b7f436f6d6d6f64697479546f6b656e3a20576f756c6420657863656564206d61785f8201527f20737570706c7900000000000000000000000000000000000000000000000000602082015250565b5f611e026027836116f4565b9150611e0d82611da8565b604082019050919050565b5f6020820190508181035f830152611e2f81611df6565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611e927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611e57565b611e9c8683611e57565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611ed7611ed2611ecd846117e5565b611eb4565b6117e5565b9050919050565b5f819050919050565b611ef083611ebd565b611f04611efc82611ede565b848454611e63565b825550505050565b5f5f905090565b611f1b611f0c565b611f26818484611ee7565b505050565b5b81811015611f4957611f3e5f82611f13565b600181019050611f2c565b5050565b601f821115611f8e57611f5f81611e36565b611f6884611e48565b81016020851015611f77578190505b611f8b611f8385611e48565b830182611f2b565b50505b505050565b5f82821c905092915050565b5f611fae5f1984600802611f93565b1980831691505092915050565b5f611fc68383611f9f565b9150826002028217905092915050565b611fdf826116ea565b67ffffffffffffffff811115611ff857611ff7611a10565b5b6120028254611c8a565b61200d828285611f4d565b5f60209050601f83116001811461203e575f841561202c578287015190505b6120368582611fbb565b86555061209d565b601f19841661204c86611e36565b5f5b828110156120735784890151825560018201915060208501945060208101905061204e565b86831015612090578489015161208c601f891682611f9f565b8355505b6001600288020188555050505b505050505050565b5f6060820190508181035f8301526120bd8186611722565b905081810360208301526120d18185611722565b905081810360408301526120e58184611722565b9050949350505050565b7f436f6d6d6f64697479546f6b656e3a20496e76616c69642072656769737472795f8201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b5f6121496028836116f4565b9150612154826120ef565b604082019050919050565b5f6020820190508181035f8301526121768161213d565b9050919050565b5f6060820190506121905f8301866119e0565b61219d6020830185611889565b6121aa6040830184611889565b94935050505056fea2646970667358221220e06fe300ded98839f3ead24ad70db89726e8f32fbec58dcd306d038ffef3e26d64736f6c634300081c0033";

type CommodityTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommodityTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommodityToken__factory extends ContractFactory {
  constructor(...args: CommodityTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: string,
    _symbol: string,
    _commodityName: string,
    _commoditySymbol: string,
    _commodityDescription: string,
    _commodityCategory: string,
    _standardUnit: BigNumberish,
    _maxSupply: BigNumberish,
    initialOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<CommodityToken> {
    return super.deploy(
      _name,
      _symbol,
      _commodityName,
      _commoditySymbol,
      _commodityDescription,
      _commodityCategory,
      _standardUnit,
      _maxSupply,
      initialOwner,
      overrides || {}
    ) as Promise<CommodityToken>;
  }
  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _commodityName: string,
    _commoditySymbol: string,
    _commodityDescription: string,
    _commodityCategory: string,
    _standardUnit: BigNumberish,
    _maxSupply: BigNumberish,
    initialOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _commodityName,
      _commoditySymbol,
      _commodityDescription,
      _commodityCategory,
      _standardUnit,
      _maxSupply,
      initialOwner,
      overrides || {}
    );
  }
  override attach(address: string): CommodityToken {
    return super.attach(address) as CommodityToken;
  }
  override connect(signer: Signer): CommodityToken__factory {
    return super.connect(signer) as CommodityToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommodityTokenInterface {
    return new utils.Interface(_abi) as CommodityTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CommodityToken {
    return new Contract(address, _abi, signerOrProvider) as CommodityToken;
  }
}
