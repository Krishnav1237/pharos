/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StockToken, StockTokenInterface } from "../StockToken";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_name",
        type: "string",
        internalType: "string",
      },
      {
        name: "_symbol",
        type: "string",
        internalType: "string",
      },
      {
        name: "_companyName",
        type: "string",
        internalType: "string",
      },
      {
        name: "_ticker",
        type: "string",
        internalType: "string",
      },
      {
        name: "_companyDescription",
        type: "string",
        internalType: "string",
      },
      {
        name: "_maxSupply",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "assetRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "burn",
    inputs: [
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "burnFrom",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "companyDescription",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "companyName",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isTradable",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setAssetRegistry",
    inputs: [
      {
        name: "_assetRegistry",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTradable",
    inputs: [
      {
        name: "_isTradable",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ticker",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateMetadata",
    inputs: [
      {
        name: "_companyName",
        type: "string",
        internalType: "string",
      },
      {
        name: "_ticker",
        type: "string",
        internalType: "string",
      },
      {
        name: "_companyDescription",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RegistryUpdated",
    inputs: [
      {
        name: "newRegistry",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StockMetadataUpdated",
    inputs: [
      {
        name: "companyName",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "ticker",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "companyDescription",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TradingStatusChanged",
    inputs: [
      {
        name: "isTradable",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ERC20InsufficientAllowance",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "allowance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InsufficientBalance",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidApprover",
    inputs: [
      {
        name: "approver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidReceiver",
    inputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSender",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSpender",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60806040525f600a60146101000a81548160ff021916908315150217905550348015610029575f5ffd5b50604051612798380380612798833981810160405281019061004b91906103d0565b808787816003908161005d9190610700565b50806004908161006d9190610700565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100e0575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100d791906107de565b60405180910390fd5b6100ef8161013360201b60201c565b5084600690816100ff9190610700565b50836007908161010f9190610700565b50826008908161011f9190610700565b5081600981905550505050505050506107f7565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6102558261020f565b810181811067ffffffffffffffff821117156102745761027361021f565b5b80604052505050565b5f6102866101f6565b9050610292828261024c565b919050565b5f67ffffffffffffffff8211156102b1576102b061021f565b5b6102ba8261020f565b9050602081019050919050565b8281835e5f83830152505050565b5f6102e76102e284610297565b61027d565b9050828152602081018484840111156103035761030261020b565b5b61030e8482856102c7565b509392505050565b5f82601f83011261032a57610329610207565b5b815161033a8482602086016102d5565b91505092915050565b5f819050919050565b61035581610343565b811461035f575f5ffd5b50565b5f815190506103708161034c565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61039f82610376565b9050919050565b6103af81610395565b81146103b9575f5ffd5b50565b5f815190506103ca816103a6565b92915050565b5f5f5f5f5f5f5f60e0888a0312156103eb576103ea6101ff565b5b5f88015167ffffffffffffffff81111561040857610407610203565b5b6104148a828b01610316565b975050602088015167ffffffffffffffff81111561043557610434610203565b5b6104418a828b01610316565b965050604088015167ffffffffffffffff81111561046257610461610203565b5b61046e8a828b01610316565b955050606088015167ffffffffffffffff81111561048f5761048e610203565b5b61049b8a828b01610316565b945050608088015167ffffffffffffffff8111156104bc576104bb610203565b5b6104c88a828b01610316565b93505060a06104d98a828b01610362565b92505060c06104ea8a828b016103bc565b91505092959891949750929550565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061054757607f821691505b60208210810361055a57610559610503565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105bc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610581565b6105c68683610581565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6106016105fc6105f784610343565b6105de565b610343565b9050919050565b5f819050919050565b61061a836105e7565b61062e61062682610608565b84845461058d565b825550505050565b5f5f905090565b610645610636565b610650818484610611565b505050565b5b81811015610673576106685f8261063d565b600181019050610656565b5050565b601f8211156106b85761068981610560565b61069284610572565b810160208510156106a1578190505b6106b56106ad85610572565b830182610655565b50505b505050565b5f82821c905092915050565b5f6106d85f19846008026106bd565b1980831691505092915050565b5f6106f083836106c9565b9150826002028217905092915050565b610709826104f9565b67ffffffffffffffff8111156107225761072161021f565b5b61072c8254610530565b610737828285610677565b5f60209050601f831160018114610768575f8415610756578287015190505b61076085826106e5565b8655506107c7565b601f19841661077686610560565b5f5b8281101561079d57848901518255600182019150602085019450602081019050610778565b868310156107ba57848901516107b6601f8916826106c9565b8355505b6001600288020188555050505b505050505050565b6107d881610395565b82525050565b5f6020820190506107f15f8301846107cf565b92915050565b611f94806108045f395ff3fe608060405234801561000f575f5ffd5b5060043610610156575f3560e01c80638ba47bdd116100c1578063d5abeb011161007a578063d5abeb01146103a2578063db2a4570146103c0578063dd62ed3e146103dc578063e84d033c1461040c578063f2fde38b14610428578063f5ec2eed1461044457610156565b80638ba47bdd146102dc5780638da5cb5b146102fa57806395d89b4114610318578063979d7e8614610336578063a9059cbb14610354578063c63e930a1461038457610156565b806342966c681161011357806342966c68146102305780635074449d1461024c57806370a082311461026a578063715018a61461029a57806379cc6790146102a45780637cd50577146102c057610156565b806306fdde031461015a578063095ea7b31461017857806318160ddd146101a857806323b872dd146101c6578063313ce567146101f657806340c10f1914610214575b5f5ffd5b610162610462565b60405161016f919061154d565b60405180910390f35b610192600480360381019061018d919061160b565b6104f2565b60405161019f9190611663565b60405180910390f35b6101b0610514565b6040516101bd919061168b565b60405180910390f35b6101e060048036038101906101db91906116a4565b61051d565b6040516101ed9190611663565b60405180910390f35b6101fe6105be565b60405161020b919061170f565b60405180910390f35b61022e6004803603810190610229919061160b565b6105c6565b005b61024a60048036038101906102459190611728565b610633565b005b610254610647565b6040516102619190611663565b60405180910390f35b610284600480360381019061027f9190611753565b61065a565b604051610291919061168b565b60405180910390f35b6102a261069f565b005b6102be60048036038101906102b9919061160b565b6106b2565b005b6102da60048036038101906102d591906117a8565b6106d2565b005b6102e461072e565b6040516102f1919061154d565b60405180910390f35b6103026107ba565b60405161030f91906117e2565b60405180910390f35b6103206107e2565b60405161032d919061154d565b60405180910390f35b61033e610872565b60405161034b91906117e2565b60405180910390f35b61036e6004803603810190610369919061160b565b610897565b60405161037b9190611663565b60405180910390f35b61038c610936565b604051610399919061154d565b60405180910390f35b6103aa6109c2565b6040516103b7919061168b565b60405180910390f35b6103da60048036038101906103d59190611927565b6109c8565b005b6103f660048036038101906103f191906119cb565b610a40565b604051610403919061168b565b60405180910390f35b61042660048036038101906104219190611753565b610ac2565b005b610442600480360381019061043d9190611753565b610bb2565b005b61044c610c36565b604051610459919061154d565b60405180910390f35b60606003805461047190611a36565b80601f016020809104026020016040519081016040528092919081815260200182805461049d90611a36565b80156104e85780601f106104bf576101008083540402835291602001916104e8565b820191905f5260205f20905b8154815290600101906020018083116104cb57829003601f168201915b5050505050905090565b5f5f6104fc610cc2565b9050610509818585610cc9565b600191505092915050565b5f600254905090565b5f600a60149054906101000a900460ff168061056b575061053c6107ba565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6105aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a190611ad6565b60405180910390fd5b6105b5848484610cdb565b90509392505050565b5f6012905090565b6105ce610d09565b600954816105da610514565b6105e49190611b21565b1115610625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061c90611bc4565b60405180910390fd5b61062f8282610d90565b5050565b61064461063e610cc2565b82610e0f565b50565b600a60149054906101000a900460ff1681565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6106a7610d09565b6106b05f610e8e565b565b6106c4826106be610cc2565b83610f51565b6106ce8282610e0f565b5050565b6106da610d09565b80600a60146101000a81548160ff0219169083151502179055507f63e9bb35ae90a43113bc6f999f1c6395e88ee5f59560b46bd45815fe8560efae816040516107239190611663565b60405180910390a150565b6007805461073b90611a36565b80601f016020809104026020016040519081016040528092919081815260200182805461076790611a36565b80156107b25780601f10610789576101008083540402835291602001916107b2565b820191905f5260205f20905b81548152906001019060200180831161079557829003601f168201915b505050505081565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546107f190611a36565b80601f016020809104026020016040519081016040528092919081815260200182805461081d90611a36565b80156108685780601f1061083f57610100808354040283529160200191610868565b820191905f5260205f20905b81548152906001019060200180831161084b57829003601f168201915b5050505050905090565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600a60149054906101000a900460ff16806108e557506108b66107ba565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091b90611ad6565b60405180910390fd5b61092e8383610fe3565b905092915050565b6008805461094390611a36565b80601f016020809104026020016040519081016040528092919081815260200182805461096f90611a36565b80156109ba5780601f10610991576101008083540402835291602001916109ba565b820191905f5260205f20905b81548152906001019060200180831161099d57829003601f168201915b505050505081565b60095481565b6109d0610d09565b82600690816109df9190611d82565b5081600790816109ef9190611d82565b5080600890816109ff9190611d82565b507f269dd5a7aa3f341df41ca55620cf3cd663dce39f51ff88eae7fb69f3e6d082c9838383604051610a3393929190611e51565b60405180910390a1505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610aca610d09565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f90611f0b565b60405180910390fd5b80600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd6ceddf6d2a22f21c7c81675c518004eff43bc5c8a6fc32a0b748e69d58671cd81604051610ba791906117e2565b60405180910390a150565b610bba610d09565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c2a575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c2191906117e2565b60405180910390fd5b610c3381610e8e565b50565b60068054610c4390611a36565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6f90611a36565b8015610cba5780601f10610c9157610100808354040283529160200191610cba565b820191905f5260205f20905b815481529060010190602001808311610c9d57829003601f168201915b505050505081565b5f33905090565b610cd68383836001611005565b505050565b5f5f610ce5610cc2565b9050610cf2858285610f51565b610cfd8585856111d4565b60019150509392505050565b610d11610cc2565b73ffffffffffffffffffffffffffffffffffffffff16610d2f6107ba565b73ffffffffffffffffffffffffffffffffffffffff1614610d8e57610d52610cc2565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d8591906117e2565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e00575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610df791906117e2565b60405180910390fd5b610e0b5f83836112c4565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e7f575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e7691906117e2565b60405180910390fd5b610e8a825f836112c4565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f610f5c8484610a40565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610fdd5781811015610fce578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610fc593929190611f29565b60405180910390fd5b610fdc84848484035f611005565b5b50505050565b5f5f610fed610cc2565b9050610ffa8185856111d4565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611075575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161106c91906117e2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110e5575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110dc91906117e2565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156111ce578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111c5919061168b565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611244575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161123b91906117e2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112b4575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112ab91906117e2565b60405180910390fd5b6112bf8383836112c4565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611314578060025f8282546113089190611b21565b925050819055506113e2565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561139d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161139493929190611f29565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611429578060025f8282540392505081905550611473565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114d0919061168b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61151f826114dd565b61152981856114e7565b93506115398185602086016114f7565b61154281611505565b840191505092915050565b5f6020820190508181035f8301526115658184611515565b905092915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115a78261157e565b9050919050565b6115b78161159d565b81146115c1575f5ffd5b50565b5f813590506115d2816115ae565b92915050565b5f819050919050565b6115ea816115d8565b81146115f4575f5ffd5b50565b5f81359050611605816115e1565b92915050565b5f5f6040838503121561162157611620611576565b5b5f61162e858286016115c4565b925050602061163f858286016115f7565b9150509250929050565b5f8115159050919050565b61165d81611649565b82525050565b5f6020820190506116765f830184611654565b92915050565b611685816115d8565b82525050565b5f60208201905061169e5f83018461167c565b92915050565b5f5f5f606084860312156116bb576116ba611576565b5b5f6116c8868287016115c4565b93505060206116d9868287016115c4565b92505060406116ea868287016115f7565b9150509250925092565b5f60ff82169050919050565b611709816116f4565b82525050565b5f6020820190506117225f830184611700565b92915050565b5f6020828403121561173d5761173c611576565b5b5f61174a848285016115f7565b91505092915050565b5f6020828403121561176857611767611576565b5b5f611775848285016115c4565b91505092915050565b61178781611649565b8114611791575f5ffd5b50565b5f813590506117a28161177e565b92915050565b5f602082840312156117bd576117bc611576565b5b5f6117ca84828501611794565b91505092915050565b6117dc8161159d565b82525050565b5f6020820190506117f55f8301846117d3565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61183982611505565b810181811067ffffffffffffffff8211171561185857611857611803565b5b80604052505050565b5f61186a61156d565b90506118768282611830565b919050565b5f67ffffffffffffffff82111561189557611894611803565b5b61189e82611505565b9050602081019050919050565b828183375f83830152505050565b5f6118cb6118c68461187b565b611861565b9050828152602081018484840111156118e7576118e66117ff565b5b6118f28482856118ab565b509392505050565b5f82601f83011261190e5761190d6117fb565b5b813561191e8482602086016118b9565b91505092915050565b5f5f5f6060848603121561193e5761193d611576565b5b5f84013567ffffffffffffffff81111561195b5761195a61157a565b5b611967868287016118fa565b935050602084013567ffffffffffffffff8111156119885761198761157a565b5b611994868287016118fa565b925050604084013567ffffffffffffffff8111156119b5576119b461157a565b5b6119c1868287016118fa565b9150509250925092565b5f5f604083850312156119e1576119e0611576565b5b5f6119ee858286016115c4565b92505060206119ff858286016115c4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a4d57607f821691505b602082108103611a6057611a5f611a09565b5b50919050565b7f53746f636b546f6b656e3a2054726164696e67206973206e6f7420656e61626c5f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f611ac06022836114e7565b9150611acb82611a66565b604082019050919050565b5f6020820190508181035f830152611aed81611ab4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611b2b826115d8565b9150611b36836115d8565b9250828201905080821115611b4e57611b4d611af4565b5b92915050565b7f53746f636b546f6b656e3a20576f756c6420657863656564206d6178207375705f8201527f706c790000000000000000000000000000000000000000000000000000000000602082015250565b5f611bae6023836114e7565b9150611bb982611b54565b604082019050919050565b5f6020820190508181035f830152611bdb81611ba2565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611c3e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611c03565b611c488683611c03565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611c83611c7e611c79846115d8565b611c60565b6115d8565b9050919050565b5f819050919050565b611c9c83611c69565b611cb0611ca882611c8a565b848454611c0f565b825550505050565b5f5f905090565b611cc7611cb8565b611cd2818484611c93565b505050565b5b81811015611cf557611cea5f82611cbf565b600181019050611cd8565b5050565b601f821115611d3a57611d0b81611be2565b611d1484611bf4565b81016020851015611d23578190505b611d37611d2f85611bf4565b830182611cd7565b50505b505050565b5f82821c905092915050565b5f611d5a5f1984600802611d3f565b1980831691505092915050565b5f611d728383611d4b565b9150826002028217905092915050565b611d8b826114dd565b67ffffffffffffffff811115611da457611da3611803565b5b611dae8254611a36565b611db9828285611cf9565b5f60209050601f831160018114611dea575f8415611dd8578287015190505b611de28582611d67565b865550611e49565b601f198416611df886611be2565b5f5b82811015611e1f57848901518255600182019150602085019450602081019050611dfa565b86831015611e3c5784890151611e38601f891682611d4b565b8355505b6001600288020188555050505b505050505050565b5f6060820190508181035f830152611e698186611515565b90508181036020830152611e7d8185611515565b90508181036040830152611e918184611515565b9050949350505050565b7f53746f636b546f6b656e3a20496e76616c6964207265676973747279206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f611ef56024836114e7565b9150611f0082611e9b565b604082019050919050565b5f6020820190508181035f830152611f2281611ee9565b9050919050565b5f606082019050611f3c5f8301866117d3565b611f49602083018561167c565b611f56604083018461167c565b94935050505056fea26469706673582212205528c3e5c6265230a06d54f99fa59f3ff1e0a701087f35d853e5eb8ed7e0ef2d64736f6c634300081c0033";

type StockTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StockTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StockToken__factory extends ContractFactory {
  constructor(...args: StockTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: string,
    _symbol: string,
    _companyName: string,
    _ticker: string,
    _companyDescription: string,
    _maxSupply: BigNumberish,
    initialOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<StockToken> {
    return super.deploy(
      _name,
      _symbol,
      _companyName,
      _ticker,
      _companyDescription,
      _maxSupply,
      initialOwner,
      overrides || {}
    ) as Promise<StockToken>;
  }
  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _companyName: string,
    _ticker: string,
    _companyDescription: string,
    _maxSupply: BigNumberish,
    initialOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _companyName,
      _ticker,
      _companyDescription,
      _maxSupply,
      initialOwner,
      overrides || {}
    );
  }
  override attach(address: string): StockToken {
    return super.attach(address) as StockToken;
  }
  override connect(signer: Signer): StockToken__factory {
    return super.connect(signer) as StockToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StockTokenInterface {
    return new utils.Interface(_abi) as StockTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StockToken {
    return new Contract(address, _abi, signerOrProvider) as StockToken;
  }
}
